/**
 * <auto-generated />
 * This file was generated by a StringTemplate 4 template.
 * Don't change it directly as your change would get overwritten.  Instead, make changes
 * to the .stg file (i.e. the StringTemplate 4 template) and save it to regenerate this file.
 *
 * For more infor on StringTemplate 4 template please go to -
 * https://github.com/antlr/antlrcs
 *
 * @author  Kola Oyewumi
 * @version 1.0.0
 * @since   2017-01-03
 *
 * A class which represents the the mapping of SugarCrm table to SugarCrm module name.
 */

package com.sugaronrest.utils;

import org.apache.commons.lang.StringUtils;
import java.util.*;

public class ModuleMapper {

    private static ModuleMapper singleton = new ModuleMapper( );
    private static Map<String, String> mapper;

    // A private Constructor prevents any other
    //* class from instantiating.
    //
    private ModuleMapper() {
        mapper = new HashMap<String, String>();
        mapper.put("accounts", "Accounts");
        mapper.put("acl_actions", "ACLActions");
        mapper.put("acl_roles", "ACLRoles");
        mapper.put("bugs", "Bugs");
        mapper.put("calls", "Calls");
        mapper.put("campaign_log", "CampaignLog");
        mapper.put("campaign_trkrs", "CampaignTrackers");
        mapper.put("campaigns", "Campaigns");
        mapper.put("cases", "Cases");
        mapper.put("contacts", "Contacts");
        mapper.put("currencies", "Currencies");
        mapper.put("document_revisions", "DocumentRevisions");
        mapper.put("documents", "Documents");
        mapper.put("eapm", "EAPM");
        mapper.put("email_addresses", "EmailAddresses");
        mapper.put("email_marketing", "EmailMarketing");
        mapper.put("email_templates", "EmailTemplates");
        mapper.put("emailman", "EmailMan");
        mapper.put("emails", "Emails");
        mapper.put("inbound_email", "InboundEmail");
        mapper.put("job_queue", "SchedulersJobs");
        mapper.put("leads", "Leads");
        mapper.put("meetings", "Meetings");
        mapper.put("notes", "Notes");
        mapper.put("oauth_consumer", "OAuthKeys");
        mapper.put("oauth_tokens", "OAuthTokens");
        mapper.put("opportunities", "Opportunities");
        mapper.put("project", "Project");
        mapper.put("project_task", "ProjectTask");
        mapper.put("prospect_lists", "ProspectLists");
        mapper.put("prospects", "Prospects");
        mapper.put("releases", "Releases");
        mapper.put("roles", "Roles");
        mapper.put("saved_search", "SavedSearch");
        mapper.put("schedulers", "Schedulers");
        mapper.put("sugarfeed", "SugarFeed");
        mapper.put("tasks", "Tasks");
        mapper.put("users", "Users");
    }

    /* Static 'instance' method */
    public static ModuleMapper getInstance( ) {
        return singleton;
    }

    public static String getModule(String tableName)
    {
        if (mapper.containsKey(tableName)) {
            return  mapper.get(tableName);
        }

        return StringUtils.EMPTY;
    }

    public static List<String> getAllModules()
    {
        List<String> list = new ArrayList<String>();
        for (Map.Entry<String, String> listItem: mapper.entrySet()) {
            list.add(listItem.getValue());
        }
        return list;
    }
}